<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Authoring OpenStax Documents in Apache OpenOffice Writer</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m60462</md:content-id>
  <md:title>Authoring OpenStax Documents in Apache OpenOffice Writer</md:title>
  <md:abstract>Learn how to create documents using Apache OpenOffice Writer and publish those documents on OpenStax.</md:abstract>
  <md:uuid>d79775ee-6b67-48a9-ab8a-6babea82525f</md:uuid>
</metadata>

<content>






<para id="p1000">
Revised: Wed Apr 27 08:27:30 CDT 2016

</para>




<para id="p1001">
<emphasis id="em1000" effect="italics">
This page is part of a Book titled 


<link id="a1000" url="http://cnx.org/contents/sbe4y4Pz:jwJWiTyV">

OpenStax Publishing with a WYSIWYG Editor.

</link>


</emphasis>
</para>







<section id="h11000">
<title>



<emphasis id="TableOfContents" effect="bold">




</emphasis>

Table of contents


</title>




<list id="ul1000" list-type="bulleted">



<item id="li1000">



<link id="a1001" target-id="TableOfContents">

Table of contents 


</link>




</item>




<item id="li1001">



<link id="a1002" target-id="Preface">

Preface 


</link>




<list id="ul1001" list-type="bulleted">



<item id="li1002">



<link id="a1003" target-id="ViewingTip">

Viewing tip 


</link>




<list id="ul1002" list-type="bulleted">



<item id="li1003">



<link id="a1004" target-id="Figures">

Figures 


</link>




</item>




<item id="li1004">



<link id="a1005" target-id="Listings">

Listings 


</link>




</item>




</list>




</item>




</list>




</item>




<item id="li1005">



<link id="a1006" target-id="Preview">

Preview 


</link>




<list id="ul1003" list-type="bulleted">



<item id="li1006">



<link id="a1007" target-id="AvailableFeatures">

Available features 


</link>




</item>




<item id="li1007">



<link id="a1008" target-id="ALittleMoreClarity">

A little more clarity 


</link>




</item>




</list>




</item>




<item id="li1008">



<link id="a1009" target-id="SpecialRequirements">

Special requirements 


</link>




</item>




<item id="li1009">



<link id="a1010" target-id="DiscussionOfAvailableFeatures">

Discussion of available features 


</link>




<list id="ul1004" list-type="bulleted">



<item id="li1010">



<link id="a1011" target-id="Headings">

Headings 


</link>




</item>




<item id="li1011">



<link id="a1012" target-id="ListsParagraphsBoldAndItalic">

Lists, paragraphs, bold, and Italic 


</link>




<list id="ul1005" list-type="bulleted">



<item id="li1012">



<link id="a1013" target-id="OrderedLists">

Ordered lists 


</link>




</item>




<item id="li1013">



<link id="a1014" target-id="UnorderedLists">

Unordered lists 


</link>




</item>




<item id="li1014">



<link id="a1015" target-id="Paragraphs">

Paragraphs 


</link>




</item>




</list>




</item>




<item id="li1015">



<link id="a1016" target-id="PreformattedText">

Preformatted text 


</link>




</item>




<item id="li1016">



<link id="a1017" target-id="PicturesHyperlinksAndBookmarks">

Pictures, hyperlinks, and bookmarks 


</link>




<list id="ul1006" list-type="bulleted">



<item id="li1017">



<link id="a1018" target-id="Pictures">

Pictures 


</link>




</item>




<item id="li1018">



<link id="a1019" target-id="HyperlinksAndBookmarks">

Hyperlinks and bookmarks 


</link>




</item>




</list>




</item>




<item id="li1019">



<link id="a1020" target-id="Notes">

Notes 


</link>




<list id="ul1007" list-type="bulleted">



<item id="li1020">



<link id="a1021" target-id="ContentsOfNotes">

Contents of notes 


</link>




</item>




<item id="li1021">



<link id="a1022" target-id="HowToCreateNote">

How to create a note 


</link>




</item>




</list>




</item>




</list>




</item>




<item id="li1022">



<link id="a1023" target-id="RunTheProgram">

Run the program 


</link>




<list id="ul1008" list-type="bulleted">



<item id="li1023">



<link id="a1024" target-id="SomeSampleOdtFiles">

Some sample odt files 


</link>




</item>




<item id="li1024">



<link id="a1025" target-id="TheBigPicture">

The big picture 


</link>




</item>




<item id="li1025">



<link id="a1026" target-id="TheDetailedPicture">

The detailed picture 


</link>




<list id="ul1009" list-type="bulleted">



<item id="li1026">



<link id="a1027" target-id="ExtractContentxmlAndPictures">

Extract content.xml and Pictures 


</link>




</item>




<item id="li1027">



<link id="a1028" target-id="GetAndRunTheProgram">

Get and run the program 


</link>




</item>




<item id="li1028">



<link id="a1029" target-id="TranslateXHTMLintoCNXML">

Translate XHTML into CNXML 


</link>




</item>




<item id="li1029">



<link id="a1030" target-id="UploadAndPublishTheCNXMLfile">

Upload and publish the CNXML file 


</link>




</item>




</list>




</item>




</list>




</item>




<item id="li1030">



<link id="a1031" target-id="DownloadableFiles">

Downloadable files 


</link>




<list id="ul1010" list-type="bulleted">



<item id="li1031">



<link id="a1032" target-id="ASomewhatUniqueCode">

A somewhat unique code 


</link>




</item>




<item id="li1032">



<link id="a1033" target-id="HowToUseTheCode">

How to use the code 


</link>




</item>




</list>




</item>




<item id="li1033">



<link id="a1034" target-id="Miscellaneous">

Miscellaneous 


</link>




</item>




</list>




</section>
<section id="h11001">
<title>



<emphasis id="Preface" effect="bold">




</emphasis>

Preface


</title>




<para id="p1002">
In an earlier module titled 


<link id="a1035" url="http://cnx.org/contents/sbe4y4Pz">

Wysiwyg0100 Getting Started


</link>

, I showed you how you can use a WYSIWYG XHTML editor to create documents for publication on OpenStax. While that is much easier than creating your documents in OpenStax's CNXML code, it does still require the use of an editing tool that may not be familiar to many potential authors. 


</para>





<para id="p1003">
In this module, I will introduce you to a process and a program that will allow you to create documents using 


<link id="a1036" url="https://www.openoffice.org/product/writer.html">

Apache OpenOffice Writer


</link>

 


<emphasis id="em1001" effect="italics">
(referred to hereafter simply as Writer)


</emphasis>
 and to publish those documents on OpenStax. With this process, you can create your documents in Writer, translate them into CNXML using programs that I will provide, and upload them to OpenStax as Plain CNXML.


</para>





<note id="note1000" type="">





<para id="p1004">
According to their 


<link id="a1037" url="https://www.openoffice.org/product/writer.html">

website


</link>

, 


<emphasis id="em1002" effect="italics">
"Writer has everything you would expect from a modern, fully equipped word processor. It is simple enough for a quick memo, yet powerful enough to create complete books with contents, diagrams, indexes, etc. You're free to concentrate on your ideas while Writer makes them look great."


</emphasis>



</para>





<para id="p1005">
Writer is very similar to Microsoft Word. If you are familiar with Word, you should have no difficulty making the transition to Writer.


</para>





</note>














<para id="p1006">
I will create this module exclusively using Writer along with a program named 


<emphasis id="strong1000" effect="bold">
OpenOfficeToXhtml01


</emphasis>
 that I will provide. 


<emphasis id="em1003" effect="italics">
(See 


</emphasis>



<link id="a1038" target-id="RunTheProgram">




<emphasis id="em1004" effect="italics">
Run the program


</emphasis>



</link>




<emphasis id="em1005" effect="italics">
.)


</emphasis>



</para>





<section id="h21000">
<title>



<emphasis id="ViewingTip" effect="bold">




</emphasis>

Viewing tip


</title>




<para id="p1007">
I recommend that you open another copy of this module in a separate browser window and use the following links to easily find and view the Figures and Listings while you are reading about them.


</para>





<section id="h31000">
<title>



<emphasis id="Figures" effect="bold">




</emphasis>

Figures


</title>




<list id="ul1011" list-type="bulleted">



<item id="li1034">
<link id="a1039" target-id="Figure_1">

 Figure 1

</link>

. An old caricature of the author. 


</item>




<item id="li1035">
<link id="a1040" target-id="Figure_2">

 Figure 2

</link>

. A note containing an image. 


</item>




<item id="li1036">
<link id="a1041" target-id="Figure_3">

 Figure 3

</link>

. The Writer hyperlink dialog box. 


</item>




</list>




</section>
<section id="h31001">
<title>



<emphasis id="Listings" effect="bold">




</emphasis>

Listings


</title>




<list id="ul1012" list-type="bulleted">



<item id="li1037">
<link id="a1042" target-id="Listing_1">

 Listing 1

</link>

 . Stand-alone preformatted text. 


</item>




<item id="li1038">
<link id="a1043" target-id="Listing_2">

 Listing 2

</link>

 . A note containing preformatted text. 


</item>




</list>




</section>
</section>
</section>
<section id="h11002">
<title>



<emphasis id="Preview" effect="bold">




</emphasis>

Preview


</title>




<para id="p1008">
This is not a general purpose Writer-to-CNXML translator process. Not all Writer features can be translated into CNXML. Also, the process will not provide you with access to all of the CNXML features that are available. 


<emphasis id="em1006" effect="italics">
(For example, it will not prepare you to create OpenStax documents having all of the features shown in the OpenStax 


</emphasis>



<link id="a1044" url="http://cnx.org/contents/Ax2o07Ul">




<emphasis id="em1007" effect="italics">
Physics


</emphasis>



</link>




<emphasis id="em1008" effect="italics">
 book.)


</emphasis>
 If you are looking for that degree of sophistication when publishing your documents on OpenStax, you simply need to learn how to create OpenStax documents using the online CNXML editor. 


</para>





<para id="p1009">
This process is designed to support a reasonable subset of the features found in Writer and the features available with CNXML. In general, you should be able to use this process to create OpenStax documents containing the features shown in this module.


</para>





<section id="h21001">
<title>



<emphasis id="AvailableFeatures" effect="bold">




</emphasis>

Available features


</title>




<para id="p1010">
Here is a list of the CNXML features that you should be able to include in your OpenStax documents using this process. These features can be created using normal Writer editing procedures. I will identify the Writer features that you can use and later translate into CNXM in this module and in several Writer sample 


<emphasis id="strong1001" effect="bold">
odt


</emphasis>
 files that I will provide. If I don't discuss a feature in this module or in one of those sample files, you probably 


<emphasis id="canNotUseIt" effect="bold">




</emphasis>

can't use it. Those features are:


</para>





<list id="ol1000" list-type="enumerated">



<item id="li1039">
Headings with a parent/child relationship such as 


<link id="a1045" target-id="Preface">

Preface


</link>

, 


<link id="a1046" target-id="ViewingTip">

Viewing tip


</link>

, and 


<link id="a1047" target-id="Figures">

Figures


</link>

 shown above.


</item>




<item id="li1040">
Ordinary paragraph text with 


<emphasis id="strong1002" effect="bold">
bold


</emphasis>
, 


<emphasis id="em1009" effect="italics">
Italic


</emphasis>
, 


<emphasis id="strong1003" effect="bold">



<emphasis id="em1010" effect="italics">
bold-Italic


</emphasis>



</emphasis>
, etc.


</item>




<item id="li1041">
Inserted images 


<emphasis id="em1011" effect="italics">
(see 

<link id="a1048" target-id="Figure_1">

 Figure 1

</link>

).


</emphasis>



</item>




<item id="li1042">
Local bookmarks such as those incorporated in the headings for 


<link id="a1049" target-id="Preface">

Preface


</link>

, 


<link id="a1050" target-id="ViewingTip">

Viewing tip


</link>

, and 


<link id="a1051" target-id="Figures">

Figures


</link>

 shown above.


</item>




<item id="li1043">
Hyperlinks to local bookmarks such as 


<link id="a1052" target-id="DiscussionOfAvailableFeatures">

this hyperlink


</link>

.


</item>




<item id="li1044">
Hyperlinks to other websites such as the 


<link id="a1053" url="http://cnx.org/contents/Ax2o07Ul">

OpenStax Physics


</link>

 book.


</item>




<item id="li1045">
Ordered lists such as this list.


<list id="ol1001" list-type="enumerated">



<item id="li1046">
Indentation in ordered list such at this one.


</item>




<item id="li1047">
And this one.


</item>




</list>




</item>




<item id="li1048">
Unordered lists such as the items under the 


<link id="a1054" target-id="TableOfContents">

Table of Contents


</link>

.


</item>




<item id="li1049">
Stand-alone preformatted text 


<emphasis id="em1012" effect="italics">
(see 

<link id="a1055" target-id="Listing_1">

 Listing 1

</link>

)


</emphasis>
.


</item>




<item id="li1050">
CNXML notes containing paragraph text, preformatted text, lists, and images 


<emphasis id="em1013" effect="italics">
(see 


</emphasis>



<emphasis id="em1014" effect="italics">
<link id="a1056" target-id="Figure_2">

 Figure 2

</link>

)


</emphasis>
.


</item>




</list>




</section>
<section id="h21002">
<title>



<emphasis id="ALittleMoreClarity" effect="bold">




</emphasis>

A little more clarity


</title>




<para id="p1011">
The process described in this module isn't actually a Writer-to-CNXML translator process. Instead, it is a Writer-to-XHTML translator process. Once you have created your Writer document and saved it in an 


<emphasis id="strong1004" effect="bold">
odt


</emphasis>
 file, you can use the program that I will provide to translate it into an XHTML document. That XHTML file can then be translated into CNXML and uploaded to OpenStax using the program and procedures that I explained in the earlier module titled 


<link id="a1057" url="http://cnx.org/contents/sbe4y4Pz">

Wysiwyg0100 Getting Started


</link>

. 


</para>





<note id="note1001" type="">





<para id="p1012">
Note: As of April 2016, the program that I will provide with this module has only been tested under a Windows 7 operating system using Java version 8.


</para>





</note>














</section>
</section>
<section id="h11003">
<title>



<emphasis id="SpecialRequirements" effect="bold">




</emphasis>

Special requirements


</title>




<para id="p1013">
You must disable all of the 


<emphasis id="strong1005" effect="bold">
AutoCorrect


</emphasis>
 options in Writer. Those are the features that automatically convert the first word in each sentence to upper case, convert ordinary quotes into fancy quotes, convert ordinary dashes 


<emphasis id="em1015" effect="italics">
(minus sign characters)


</emphasis>
 into fancy hyphens, etc. You can disable those options by selecting 


<emphasis id="strong1006" effect="bold">
AutoCorrect


</emphasis>
 on the 


<emphasis id="strong1007" effect="bold">
Format


</emphasis>
 menu and then clearing the 


<emphasis id="strong1008" effect="bold">
While Typing


</emphasis>
 checkbox.


</para>





<para id="p1014">
If you fail to do that, Writer will insert characters 


<emphasis id="em1016" effect="italics">
(such as fancy quotes)


</emphasis>
 in the output that are not suitable for translating into CNXML and uploading to OpenStax. 


</para>





<para id="p1015">
Also, if you plan to include computer code in your document, 


<emphasis id="em1017" effect="italics">
(see 

<link id="a1058" target-id="Listing_2">

 Listing 2

</link>

)


</emphasis>
, you should probably disable automatic spell checking. Otherwise, Writer may corrupt your computer code by changing the spelling of some of the code. 


</para>





</section>
<section id="h11004">
<title>



<emphasis id="DiscussionOfAvailableFeatures" effect="bold">




</emphasis>

Discussion of available features


</title>




<para id="p1016">
The CNXML features that this program supports are described below.


</para>





<section id="h21003">
<title>



<emphasis id="Headings" effect="bold">




</emphasis>

Headings


</title>




<para id="p1017">
The program supports the use of Headings such as 


<link id="a1059" target-id="Preface">

Preface


</link>

, 


<link id="a1060" target-id="ViewingTip">

Viewing tip


</link>

, 


<link id="a1061" target-id="Figures">

Figures


</link>

, and 


<link id="a1062" target-id="Listings">

Listings


</link>

 shown above. There are probably a variety of ways to create headings in Writer. The easiest way that I have found is to:


</para>





<list id="ul1013" list-type="bulleted">



<item id="li1051">
Highlight the text that will form the heading


</item>




<item id="li1052">
Hold down the Ctrl key


</item>




<item id="li1053">
Press the numbers from 1 through 5


</item>




</list>




<para id="p1018">
The number 1 will produce the highest level heading and the number 5 will produce the lowest level heading that is apparently supported by Writer. 


<emphasis id="em1018" effect="italics">
(You can hold the Ctrl key and press the number 6 but it won't produce a heading in the version of Writer that I am using -- 4.1.2.)


</emphasis>



<emphasis id="em1019" effect="italics">
 For example, the headings 


</emphasis>



<link id="a1063" target-id="Preface">




<emphasis id="em1020" effect="italics">
Preface


</emphasis>



</link>




<emphasis id="em1021" effect="italics">
, 


</emphasis>



<link id="a1064" target-id="ViewingTip">




<emphasis id="em1022" effect="italics">
Viewing tip


</emphasis>



</link>




<emphasis id="em1023" effect="italics">
, and 


</emphasis>



<link id="a1065" target-id="Figures">




<emphasis id="em1024" effect="italics">
Figures


</emphasis>



</link>




<emphasis id="em1025" effect="italics">
 are levels 1, 2, and 3 respectively.


</emphasis>



</para>





<para id="p1019">
Headings created in this manner will translate into h1, h2, and h3 headers in XHTML respectively. Those headers will then translate into sections in CNXML. If you are reading this document online at OpenStax, this section titled Headings is one of many sections contained in the CNXML document. 


</para>





<para id="p1020">
The rules for using Headings are simple. Heading 1 is the top level heading. To produce a CNXML file that can be successfully uploaded to OpenStax, any element designated as Heading 2 must be a child of a Heading 1 element. Similarly, any element designated as Heading 3 must be a child of a Heading 2 element. You cannot create a Heading 1 element and then create a Heading 3 element below it without creating a Heading 2 element in between. 


<emphasis id="em1026" effect="italics">
(Well, actually you can do that but it will cause problems later on when you try to upload to OpenStax.) 


</emphasis>



</para>





<para id="p1021">



<emphasis id="em1027" effect="italics">
See 


<link id="a1066" target-id="RunTheProgram">

Run the program


</link>

 for a link to a zip file containing a sample 


<emphasis id="strong1009" effect="bold">
odt


</emphasis>
 file named 


<emphasis id="strong1010" effect="bold">
Headings.odt


</emphasis>
.


</emphasis>



</para>





</section>
<section id="h21004">
<title>



<emphasis id="ListsParagraphsBoldAndItalic" effect="bold">




</emphasis>

Lists, paragraphs, bold, and Italic


</title>




<section id="h31002">
<title>



<emphasis id="OrderedLists" effect="bold">




</emphasis>

Ordered lists


</title>




<para id="p1022">
The list that you see 


<link id="a1067" target-id="canNotUseIt">

above


</link>

 is an ordered list. Each item has a numeral to its left. Writer provides many options for formatting ordered lists using numerals, letters, Roman numerals, etc. However, this program supports only the simple variety that you see 


<link id="a1068" target-id="canNotUseIt">

above


</link>

 using numerals that begin with the numeral "1" and increase incrementally going down the page. 


</para>





</section>
<section id="h31003">
<title>



<emphasis id="UnorderedLists" effect="bold">




</emphasis>

Unordered lists


</title>




<para id="p1023">
The list that you see under 


<link id="a1069" target-id="TableOfContents">

Table of contents


</link>

 is an unordered list, often referred to as a bullet list. There are no numbers on the left, just bullets. As before, Writer provides different options for formatting the bullets. However, this program supports only the simple variety that you see under 


<link id="a1070" target-id="TableOfContents">

Table of contents


</link>

.


</para>





</section>
<section id="h31004">
<title>



<emphasis id="Paragraphs" effect="bold">




</emphasis>

Paragraphs


</title>




<para id="p1024">
This program supports ordinary Writer paragraph text. This is the type of text that you get when you start typing in a blank document. This is paragraph text that you are reading right now.


</para>





<para id="p1025">
This sentence and the following sentences comprise a paragraph. In Writer, you terminate a paragraph when you press the 


<emphasis id="strong1011" effect="bold">
Enter


</emphasis>
 key. This sentence contains a 


<emphasis id="strong1012" effect="bold">
bold


</emphasis>
 word. This sentence contains an 


<emphasis id="em1028" effect="italics">
Italic


</emphasis>
 word. This sentence contains text that is both 


<emphasis id="strong1013" effect="bold">



<emphasis id="em1029" effect="italics">
bold and italic


</emphasis>



</emphasis>
. 


</para>





<para id="p1026">
There are various ways to style text as 


<emphasis id="strong1014" effect="bold">
bold


</emphasis>
 and 


<emphasis id="em1030" effect="italics">
Italic


</emphasis>
. The easiest way that I know of is to 


</para>





<list id="ul1014" list-type="bulleted">



<item id="li1054">
Highlight the text that is to be styled as 


<emphasis id="strong1015" effect="bold">
bold


</emphasis>
 or 


<emphasis id="em1031" effect="italics">
Italic


</emphasis>



</item>




<item id="li1055">
Hold down the Ctrl key


</item>




<item id="li1056">
Press the b-key for 


<emphasis id="strong1016" effect="bold">
bold


</emphasis>
 and the i-key for 


<emphasis id="em1032" effect="italics">
Italic


</emphasis>



</item>




</list>




<note id="note1002" type="">





<para id="p1027">



<emphasis id="strong1017" effect="bold">
Important note:


</emphasis>
 Because angle brackets and ampersands have very significant meanings in HTML, you cannot include angle brackets and ampersands in your Writer text unless you put them in preformatted text. If you put them in preformatted text, you must first convert them to their respective entities as shown below:


</para>






<code id="pre1000" display="block">The entity for &lt; is &amp;lt;
The entity for &gt; is &amp;gt;
The emtity for &amp; is &amp;amp;
</code>




</note>














<para id="p1028">



<emphasis id="em1033" effect="italics">
See 


</emphasis>



<link id="a1071" target-id="RunTheProgram">




<emphasis id="em1034" effect="italics">
Run the program


</emphasis>



</link>




<emphasis id="em1035" effect="italics">
 for a link to a zip file containing a sample 


</emphasis>



<emphasis id="strong1018" effect="bold">



<emphasis id="em1036" effect="italics">
odt


</emphasis>



</emphasis>



<emphasis id="em1037" effect="italics">
 file named 


</emphasis>



<emphasis id="strong1019" effect="bold">



<emphasis id="em1038" effect="italics">
ListsParagraphsBoldAndItalic.odt


</emphasis>



</emphasis>



<emphasis id="em1039" effect="italics">
.


</emphasis>



</para>





</section>
</section>
<section id="h21005">
<title>



<emphasis id="PreformattedText" effect="bold">




</emphasis>

Preformatted text


</title>




<para id="p1029">
Preformatted text is a term that is used in HTML. To create text in Writer that will result in preformatted text in the XHTML output, you need to highlight the text and change the font to 


<emphasis id="strong1020" effect="bold">
Courier New


</emphasis>
. 


<emphasis id="em1040" effect="italics">
(Any text in your Writer document that is styled as Courier New will be written into the output XHTML file as preformatted text.) 


</emphasis>



<emphasis id="em1041" effect="italics">
When preformatted text is later translated into CNXML for uploading to OpenStax, it is given a CNXML style named 


</emphasis>



<emphasis id="strong1021" effect="bold">



<emphasis id="em1042" effect="italics">
code


</emphasis>



</emphasis>



<emphasis id="em1043" effect="italics">
.


</emphasis>



</para>





<para id="p1030">
Here is an example of stand-alone preformatted text. A simple paragraph was used to create a caption with a bookmark that can be referenced by hyperlinks elsewhere in the document.


</para>





<para id="p1031">



<emphasis id="strong1022" effect="bold">



<emphasis id="Listing_1" effect="bold">




</emphasis>

Listing 1. Stand-alone preformatted text.


</emphasis>



</para>






<code id="pre1001" display="block">//Process hyperlinks 
else if(node.getNodeName() == "text:a"){
  System.out.println("---Processing text:a");
    out.println("&lt;a href=" + "\"" + 
        valueOf(node,"@xlink:href") + "\"" + "&gt;");
  //Process all XML child nodes
  // recursively
  applyTemplates(node,null);
  out.println("&lt;/a&gt;");
}//end else if
//End process hyperlinks
</code>




<para id="p1032">
As you will see later in 

<link id="a1072" target-id="Listing_2">

 Listing 2

</link>

, preformatted text can also be put into a CNXML note, which in some cases may provide an improved visual experience in the OpenStax display.


</para>





<para id="p1033">
The typical purpose of preformatted text in a web page is to allow you to preserve the format such as indentation, line spacing, etc. In this program, preformatted text is also used to include characters, such as angle brackets, that would cause problems when mixed in with HTML code. 


</para>





<note id="note1003" type="">





<para id="p1034">



<emphasis id="strong1023" effect="bold">



<emphasis id="ImportantNotesWithAList" effect="bold">




</emphasis>

Important notes:


</emphasis>



</para>





<list id="ol1002" list-type="enumerated">



<item id="li1057">
As mentioned earlier, you may not include angle brackets and ampersands in your ordinary Writer paragraph text. However, you may put them in preformatted text provided that you first convert them to their respective entities.


</item>




<item id="li1058">
You may not make any of the text in preformatted text into either a local bookmark or a hyperlink. You also may not apply formatting such as bold and Italic to preformatted text.


</item>




</list>




</note>














<para id="p1035">



<emphasis id="em1044" effect="italics">
See 


</emphasis>



<link id="a1073" target-id="RunTheProgram">




<emphasis id="em1045" effect="italics">
Run the program


</emphasis>



</link>




<emphasis id="em1046" effect="italics">
 for a link to a zip file containing a sample 


</emphasis>



<emphasis id="strong1024" effect="bold">



<emphasis id="em1047" effect="italics">
odt


</emphasis>



</emphasis>



<emphasis id="em1048" effect="italics">
 file named 


</emphasis>



<emphasis id="strong1025" effect="bold">



<emphasis id="em1049" effect="italics">
PreformattedText.odt


</emphasis>



</emphasis>



<emphasis id="em1050" effect="italics">
.


</emphasis>



</para>





</section>
<section id="h21006">
<title>



<emphasis id="PicturesHyperlinksAndBookmarks" effect="bold">




</emphasis>

Pictures, hyperlinks, and bookmarks


</title>




<section id="h31005">
<title>



<emphasis id="Pictures" effect="bold">




</emphasis>

Pictures


</title>




<para id="p1036">
You can insert images into your Writer document by selecting 


<emphasis id="strong1026" effect="bold">
Picture


</emphasis>
 on the 


<emphasis id="strong1027" effect="bold">
Insert


</emphasis>
 menu. The image shown below was inserted in that manner. Once inserted, the image becomes part of the 


<emphasis id="strong1028" effect="bold">
odt


</emphasis>
 file. It other words, the 


<emphasis id="strong1029" effect="bold">
odt


</emphasis>
 file will contain a copy of the image and not just a pointer to the original image file. Changes that you make to the image, using the 


<emphasis id="strong1030" effect="bold">
Graphic Filter


</emphasis>
 item on the 


<emphasis id="strong1031" effect="bold">
Picture Bar


</emphasis>
, for example, will be made to the copy and not to the original image file.


</para>





<para id="p1037">



<emphasis id="strong1032" effect="bold">



<emphasis id="Figure_1" effect="bold">




</emphasis>

Figure 1. An old caricature of the author.


</emphasis>



</para>





<para id="p1038">



<media id="media1000" alt="Missing image" display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/100000000000007D0000009069B35050.jpg" width="125" height="144"/>
</media>




</para>





<para id="p1039">
An ordinary paragraph was used to create the caption with the bookmark shown 


<link id="a1074" target-id="Figure_1">

above


</link>

. It is best to put the caption at the top instead of at the bottom. Later when a user clicks a hyperlink to a bookmark in the caption, that bookmark will be moved to the top of the page in the browser.


</para>





<para id="p1040">
For accessibility purposes, you should always provide 


<emphasis id="strong1033" effect="bold">
Alt Text


</emphasis>
 for your images. If you don't do that, OpenStax may refuse to accept and publish the image. You can create 


<emphasis id="strong1034" effect="bold">
Alt Text


</emphasis>
 by right-clicking on the image, selecting 


<emphasis id="strong1035" effect="bold">
Description


</emphasis>
, and entering your text in the 


<emphasis id="strong1036" effect="bold">
Title


</emphasis>
 box.


</para>





</section>
<section id="h31006">
<title>



<emphasis id="HyperlinksAndBookmarks" effect="bold">




</emphasis>

Hyperlinks and bookmarks


</title>




<para id="p1041">
To create a bookmark, do the following:


</para>





<list id="ul1015" list-type="bulleted">



<item id="li1059">
Place the cursor at the location for the bookmark.


</item>




<item id="li1060">
Select 


<emphasis id="strong1037" effect="bold">
Bookmark


</emphasis>
 on the 


<emphasis id="strong1038" effect="bold">
Insert


</emphasis>
 menu


</item>




<item id="li1061">
Enter the text for the bookmark


</item>




</list>




<note id="note1004" type="">





<para id="p1042">



<emphasis id="WhenEnteringTheText" effect="bold">




</emphasis>




<emphasis id="strong1039" effect="bold">
Important:


</emphasis>
 When entering the text for a bookmark, don't leave any spaces and don't use any characters other than letters, numbers, and the underscore character. A good way to create descriptive bookmarks is to use "CamelCase" to create a bookmark that looks something like the following:


</para>






<code id="pre1002" display="block">MyVeryBestBookmark
</code>




</note>














<para id="p1043">
To create a hyperlink to another web site, do the following:


</para>





<list id="ul1016" list-type="bulleted">



<item id="li1062">
Highlight the text that is to become the hyperlink.


</item>




<item id="li1063">
Select 


<emphasis id="strong1040" effect="bold">
Hyperlink


</emphasis>
 on the 


<emphasis id="strong1041" effect="bold">
Insert


</emphasis>
 menu.


</item>




<item id="li1064">
Select 


<emphasis id="strong1042" effect="bold">
Internet


</emphasis>
 and enter the URL in the 


<emphasis id="strong1043" effect="bold">
Target


</emphasis>
 box.


</item>




</list>




<para id="p1044">
To create a hyperlink to a bookmark in the same document:


</para>





<list id="ul1017" list-type="bulleted">



<item id="li1065">
Highlight the text that is to become the hyperlink.


</item>




<item id="li1066">
Select 


<emphasis id="strong1044" effect="bold">
Hyperlink


</emphasis>
 on the 


<emphasis id="strong1045" effect="bold">
Insert


</emphasis>
 menu.


</item>




<item id="li1067">
Select 


<emphasis id="strong1046" effect="bold">
Document


</emphasis>
.


</item>




<item id="li1068">
Enter the name of the bookmark in the 


<emphasis id="strong1047" effect="bold">
Target


</emphasis>
 box or click the button to the right of the 


<emphasis id="strong1048" effect="bold">
Target


</emphasis>
 box and select the bookmark in the list of 


<emphasis id="strong1049" effect="bold">
Bookmarks


</emphasis>
.


</item>




</list>




<para id="p1045">



<emphasis id="em1051" effect="italics">
See 


</emphasis>



<link id="a1075" target-id="RunTheProgram">




<emphasis id="em1052" effect="italics">
Run the program


</emphasis>



</link>




<emphasis id="em1053" effect="italics">
 for a link to a zip file containing a sample 


</emphasis>



<emphasis id="strong1050" effect="bold">



<emphasis id="em1054" effect="italics">
odt


</emphasis>



</emphasis>



<emphasis id="em1055" effect="italics">
 file named 


</emphasis>



<emphasis id="strong1051" effect="bold">



<emphasis id="em1056" effect="italics">
PicturesHyperlinksAndBookmarks.odt


</emphasis>



</emphasis>



<emphasis id="em1057" effect="italics">
.


</emphasis>



</para>





</section>
</section>
<section id="h21007">
<title>



<emphasis id="Notes" effect="bold">




</emphasis>

Notes


</title>




<para id="p1046">
A CNXML 


<emphasis id="strong1052" effect="bold">
note


</emphasis>
 is a container that can be used to cause material to be set apart from normal CNXML paragraph text providing a pleasing appearance in the OpenStax presentation. 


</para>





<section id="h31007">
<title>



<emphasis id="ContentsOfNotes" effect="bold">




</emphasis>

Contents of notes


</title>




<para id="p1047">
Notes can contain ordinary paragraph text, preformatted text, lists, images, or a combination of those elements. This document contains several notes that contain ordinary paragraph text such as the one shown 


<link id="a1076" target-id="WhenEnteringTheText">

above


</link>

, which contains a mixture of ordinary paragraph text and preformatted text.


</para>





<para id="p1048">
The note shown 


<link id="a1077" target-id="ImportantNotesWithAList">

here


</link>

 contains a list.


</para>





<para id="p1049">
The following note contains preformatted text.


</para>





<para id="p1050">



<emphasis id="strong1053" effect="bold">



<emphasis id="Listing_2" effect="bold">




</emphasis>

Listing 2. A note containing preformatted text.


</emphasis>



</para>





<note id="note1005" type="">






<code id="pre1003" display="block">//Process hyperlinks 
else if(node.getNodeName() == "text:a"){
  System.out.println("---Processing text:a");
    out.println("&lt;a href=" + "\"" + 
        valueOf(node,"@xlink:href") + "\"" + "&gt;");
  //Process all XML child nodes
  // recursively
  applyTemplates(node,null);
  out.println("&lt;/a&gt;");
}//end else if
//End process hyperlinks
</code>




</note>














<para id="p1051">
As you can see, this is a good way to present program code. However, the visual effect might be more pleasing if the caption were moved inside the note as shown in 

<link id="a1078" target-id="Figure_2">

 Figure 2

</link>

.


</para>





<para id="p1052">
Finally, the following note contains an image. In this case, a paragraph was used to create a caption with a bookmark 


<emphasis id="strong1054" effect="bold">
inside the note


</emphasis>
.


</para>





<note id="note1006" type="">





<para id="p1053">



<emphasis id="strong1055" effect="bold">



<emphasis id="Figure_2" effect="bold">




</emphasis>

Figure 2. A note containing an image.


</emphasis>



</para>





<para id="p1054">



<media id="media1001" alt="Missing alt value." display="block">
<image id="img1001" mime-type="image/jpeg" src="../../media/10000000000001C3000001C37E3C8FEA.jpg" width="450" height="450"/>
</media>




</para>





</note>














</section>
<section id="h31008">
<title>



<emphasis id="HowToCreateNote" effect="bold">




</emphasis>

How to create a note


</title>




<para id="p1055">
To create a note in CNXML, you need to create a basic table in Writer with one row and one column. 


<emphasis id="em1058" effect="italics">
(Don't do anything fancy when you create the table.)


</emphasis>
 You can then populate it with one or more of the items shown above. That table will eventually end up as a note on OpenStax.


</para>





</section>
</section>
</section>
<section id="h11005">
<title>



<emphasis id="RunTheProgram" effect="bold">




</emphasis>

Run the program


</title>




<para id="p1056">
Now it's time to explain the mechanics of using this process and this program to create and publish your documents on OpenStax. 


</para>





<section id="h21008">
<title>



<emphasis id="SomeSampleOdtFiles" effect="bold">




</emphasis>

Some sample odt files


</title>




<para id="p1057">
Before getting into the details, click 


<link id="a1079" url="Samples.zip">

here


</link>

 to download a zip file named 


<emphasis id="strong1056" effect="bold">
Samples.zip


</emphasis>
 that contains several sample 


<emphasis id="strong1057" effect="bold">
odt


</emphasis>
 files. You can use these sample 


<emphasis id="strong1058" effect="bold">
odt


</emphasis>
 files to experiment with the process and the program.


</para>





</section>
<section id="h21009">
<title>



<emphasis id="TheBigPicture" effect="bold">




</emphasis>

The big picture


</title>




<para id="p1058">
The steps for creating and publishing your document on OpenStax are as follows:


</para>





<list id="ol1003" list-type="enumerated">



<item id="li1069">
Download and install the 


<link id="a1080" url="https://www.openoffice.org/">

Apache OpenOffice


</link>

 suite. As of April 2016, it is free. Note that the suite contains several different elements in addition to 


<emphasis id="strong1059" effect="bold">
Writer


</emphasis>
, such as 


<emphasis id="strong1060" effect="bold">
Base


</emphasis>
, 


<emphasis id="strong1061" effect="bold">
Calc


</emphasis>
, and 


<emphasis id="strong1062" effect="bold">
Draw


</emphasis>
.


</item>




<item id="li1070">
Use 


<emphasis id="strong1063" effect="bold">
Writer


</emphasis>
 to create your document as described above and save it. By default, the document will be saved in a file with an extension of 


<emphasis id="strong1064" effect="bold">
odt


</emphasis>
.


</item>




<item id="li1071">
Use the process described below to translate the 


<emphasis id="strong1065" effect="bold">
odt


</emphasis>
 file into an XHTML file.


</item>




<item id="li1072">
Go to 


<link id="a1081" url="http://cnx.org/contents/sbe4y4Pz">

Wysiwyg0100 Getting Started/Running the program


</link>

 and use the procedure described there to translate your XHTML file into a CNXML file for uploading to OpenStax.


</item>




<item id="li1073">
Go to 


<link id="a1082" url="http://cnx.org/contents/sbe4y4Pz">

Wysiwyg0100 Getting Started/Upload and publish your new page


</link>

 and use the procedure described there to upload your CNXML file and publish it on OpenStax.


</item>




</list>




</section>
<section id="h21010">
<title>



<emphasis id="TheDetailedPicture" effect="bold">




</emphasis>

The detailed picture


</title>




<para id="p1059">
I will concentrate steps 3, 4, and 5 in the above list


<emphasis id="em1059" effect="italics">
.


</emphasis>



</para>





<para id="p1060">
Although the output file that is produced when you save the document in Writer has an extension of 


<emphasis id="strong1066" effect="bold">
odt


</emphasis>
, it is actually a zip file. You can confirm that by changing the extension from 


<emphasis id="strong1067" effect="bold">
odt


</emphasis>
 to 


<emphasis id="strong1068" effect="bold">
zip


</emphasis>
 and opening the file using whatever program you normally use to extract the contents of zip files. In Windows, for example, you can simply right-click on the zip file and select 


<emphasis id="strong1069" effect="bold">
Open in a new window


</emphasis>
. Then you can copy the contents of the zip file into a different folder.


</para>





<note id="note1007" type="">





<para id="p1061">
Note that if you have a special zip program, such as WinZip installed on your computer, it will probably override the Windows default behavior described above.


</para>





</note>














<section id="h31009">
<title>



<emphasis id="ExtractContentxmlAndPictures" effect="bold">




</emphasis>

Extract content.xml and Pictures


</title>




<para id="p1062">
When you open the zip file for extraction, you will see that it contains a large number of files and folders. In all cases, it should contain a file named 


<emphasis id="strong1070" effect="bold">
content.xml


</emphasis>
. If your Writer document contains pictures, the zip file will also contain a folder named 


<emphasis id="strong1071" effect="bold">
Pictures


</emphasis>
. The 


<emphasis id="strong1072" effect="bold">
Pictures


</emphasis>
 folder will contain copies of the image files that you inserted into your document. The image files in the 


<emphasis id="strong1073" effect="bold">
Pictures


</emphasis>
 folder will probably have very long names such as


</para>





<para id="p1063">
10000000000001C3000001C37E3C8FEA.jpg


</para>





<para id="p1064">
This process uses only the file named 


<emphasis id="strong1074" effect="bold">
content.xml


</emphasis>
 and the folder named 


<emphasis id="strong1075" effect="bold">
Pictures


</emphasis>
 if it exists. Extract those two items into an empty folder.


</para>





</section>
<section id="h31010">
<title>



<emphasis id="GetAndRunTheProgram" effect="bold">




</emphasis>

Get and run the program


</title>




<para id="p1065">
Click 


<link id="a1083" url="ProgramFiles.zip">

here


</link>

 to download a zip file named 


<emphasis id="strong1076" effect="bold">
ProgramFiles.zip


</emphasis>
 containing the compiled Java class files for the program named 


<emphasis id="strong1077" effect="bold">
OpenOfficeToXhtml01


</emphasis>
. That zip file should contain the following four files:


</para>





<list id="ul1018" list-type="bulleted">



<item id="li1074">
HtmlPreCleaner01.class 


</item>




<item id="li1075">
OpenOfficeToXhtml01.class 


</item>




<item id="li1076">
Translate01.class


</item>




<item id="li1077">
copyFilesFromPicture.bat


</item>




</list>




<para id="p1066">
Extract those four files into the same folder with the file named 


<emphasis id="strong1078" effect="bold">
content.xml


</emphasis>
. 


<emphasis id="em1060" effect="italics">
(Note: if you haven't downloaded the program files since the revision date shown at the top of this module, it might be a good idea to download a fresh copy to make certain that you have the latest version.)


</emphasis>



</para>





<para id="p1067">
Open a command-line window in that folder and execute the following command at the command prompt:


</para>






<code id="pre1004" display="block">java OpenOfficeToXhtml01 content.xml PreCleanerOutput.html &gt; junk.txt
</code>




<para id="p1068">
This should produce several new files in that folder including a file named 


<emphasis id="strong1079" effect="bold">
PreCleanerOutput.html


</emphasis>
 and a copy of each of the image files from the 


<emphasis id="strong1080" effect="bold">
Pictures


</emphasis>
 folder, if any.


</para>





<para id="p1069">
The file named 


<emphasis id="strong1081" effect="bold">
PreCleanerOutput.html


</emphasis>
 is the XHTML file that you are looking for. If you open that file in your browser, you will see an XHTML version of your document. 


</para>





</section>
<section id="h31011">
<title>



<emphasis id="TranslateXHTMLintoCNXML" effect="bold">




</emphasis>

Translate XHTML into CNXML


</title>




<para id="p1070">
Copy that file along with the image files into another empty folder. Then go to 


<link id="a1084" url="http://cnx.org/contents/sbe4y4Pz">

Wysiwyg0100 Getting Started/Running the program


</link>

 and follow the procedures given there to translate the XHTML file named 


<emphasis id="strong1082" effect="bold">
PreCleanerOutput.html


</emphasis>
 into a CNXML file.


</para>





<para id="p1071">
As described in that module, you will open a command-line window in that folder and execute the following command at the command line:


</para>






<code id="pre1005" display="block">java CNXMLprep12 PreCleanerOutput.html OutputFile.cnxml
</code>




<para id="p1072">
where 


</para>





<list id="ul1019" list-type="bulleted">



<item id="li1078">



<emphasis id="strong1083" effect="bold">
PreCleanerOutput.html


</emphasis>
 is the name of the input file.


</item>




<item id="li1079">



<emphasis id="strong1084" effect="bold">
OutputFile.cnxml


</emphasis>
 is the name that you want to assign to the CNXML file produced by the program. This is the file that you will upload to OpenStax


</item>




</list>




</section>
<section id="h31012">
<title>



<emphasis id="UploadAndPublishTheCNXMLfile" effect="bold">




</emphasis>

Upload and publish the CNXML file


</title>




<para id="p1073">
Then go to 


<link id="a1085" url="http://cnx.org/contents/sbe4y4Pz">

Wysiwyg0100 Getting Started/Upload and publish your new page


</link>

 and follow the instructions there to upload your CNXML file to OpenStax, and to publish it on OpenStax.


</para>





<note id="note1008" type="">





<para id="p1074">
This program was developed using the 


<link id="a1086" url="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">

Java SE Development Kit 8


</link>

. In order to run this program on your computer, you must have the 


<link id="a1087" url="http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html">

Java SE Runtime Environment 8 (JRE)


</link>

 or a later version of the JRE installed on your computer. The JRE is already installed on many computers and it may already be installed on yours 


<emphasis id="em1061" effect="italics">
(but it may be an earlier version that requires updating)


</emphasis>
. If it is not installed, or it is not up to date, there are many web pages that provide instructions for downloading and installing Java. One of those web pages is located 


<link id="a1088" url="http://www.oracle.com/technetwork/java/javase/downloads/index.html">

here


</link>

.


</para>





</note>














</section>
</section>
</section>
<section id="h11006">
<title>



<emphasis id="DownloadableFiles" effect="bold">




</emphasis>

Downloadable files


</title>




<para id="p1075">
There is at least one major area where Writer doesn't serve us well for creating documents that will be published on OpenStax. Therefore, it was necessary for me to develop a workaround to deal with the issue. 


</para>





<para id="p1076">
The issue is that as in the case in 


<link id="a1089" target-id="GetAndRunTheProgram">

Get and run the program


</link>

 above, we often want to make it possible for the user to download a zip file, an audio file, or some other file type 


<emphasis id="em1062" effect="italics">
(other than an image file)


</emphasis>
 by clicking on a link in the OpenStax document. As near as I can tell, Writer doesn't provide direct support for that capability.


</para>





<section id="h21011">
<title>



<emphasis id="ASomewhatUniqueCode" effect="bold">




</emphasis>

A somewhat unique code


</title>




<para id="p1077">
Before getting into the details, let me introduce you to a somewhat unique code that is an integral part of my workaround:


</para>






<code id="pre1006" display="block">12345OIcafa678910TIliga
</code>




<para id="p1078">
I say it is somewhat unique because I didn't find any matches for the code with a Google search. 


</para>





<para id="p1079">
To make the code easy to remember, the characters in the code are the numeric and letter equivalents of the first letters of the words in the following nursery rhyme:


</para>






<code id="pre1007" display="block">
One, two, three, four, five,
Once I caught a fish alive,
six, seven, eight, nine, ten,
Then I let it go again.

</code>




</section>
<section id="h21012">
<title>



<emphasis id="HowToUseTheCode" effect="bold">




</emphasis>

How to use the code


</title>




<para id="p1080">
Now that you know what the code is and how to remember it, I will explain how to use it. Assume that you want to make it possible for your document's viewers to download a file named 


<emphasis id="strong1085" effect="bold">
Samples.zip


</emphasis>
 from the OpenStax site. 


<emphasis id="em1063" effect="italics">
(You will have placed that zip file along with any image files and other downloadable files in a zip file and uploaded it to OpenStax as described 


</emphasis>



<link id="a1090" url="http://cnx.org/contents/sbe4y4Pz%20%20">




<emphasis id="em1064" effect="italics">
here


</emphasis>



</link>




<emphasis id="em1065" effect="italics">
 and 


</emphasis>



<link id="a1091" url="http://cnx.org/contents/sbe4y4Pz:5fF2eBev">




<emphasis id="em1066" effect="italics">
here


</emphasis>



</link>




<emphasis id="em1067" effect="italics">
.)


</emphasis>



</para>





<para id="p1081">
Highlight the text in your document that will be the hyperlink for downloading the file, such as the word 


<emphasis id="strong1086" effect="bold">
here


</emphasis>
 in the following sentence:


</para>





<note id="note1009" type="">





<para id="p1082">
Click 


<link id="a1092" url="Samples.zip">

here


</link>

 to download the file named 


<emphasis id="strong1087" effect="bold">
Samples.zip


</emphasis>
.


</para>





</note>














<para id="p1083">
Pull down the 


<emphasis id="strong1088" effect="bold">
Insert


</emphasis>
 menu and select 


<emphasis id="strong1089" effect="bold">
Hyperlink


</emphasis>
. The dialog box shown in 

<link id="a1093" target-id="Figure_3">

 Figure 3

</link>

 will appear.


</para>





<para id="p1084">



</para>





<note id="note1010" type="">





<para id="p1085">



<emphasis id="Figure_3" effect="bold">




</emphasis>

Figure 3. The Writer hyperlink dialog box.


</para>





<para id="p1086">



<media id="media1002" alt="Missing image" display="block">
<image id="img1002" mime-type="image/jpeg" src="../../media/10000000000002D2000001910446C26F.jpg" width="721" height="401"/>
</media>




</para>





</note>














<para id="p1087">
Select 


<emphasis id="strong1090" effect="bold">
Internet


</emphasis>
 on the left, check 


<emphasis id="strong1091" effect="bold">
Web


</emphasis>
 at the top and type the code into the 


<emphasis id="strong1092" effect="bold">
Target


</emphasis>
 field followed immediately by the name of the downloadable file. Then click the 


<emphasis id="strong1093" effect="bold">
Apply


</emphasis>
 button and the 


<emphasis id="strong1094" effect="bold">
Close


</emphasis>
 button.


</para>





<para id="p1088">
This will cause a hyperlink pointing to a website with the name shown in 

<link id="a1094" target-id="Figure_3">

 Figure 3

</link>

 to be contained in the file that is first produced by translating the file named 


<emphasis id="strong1095" effect="bold">
content.xml


</emphasis>
 into XHTML. That is not what we are looking for. What we are looking for is a hyperlink to a file named 


<emphasis id="strong1096" effect="bold">
Samples.zip


</emphasis>
 that is in the same folder as the CNXML file on the OpenStax server. The hyperlink is modified to the following form for the final XHTML output file. This is exactly what we need.


</para>






<code id="pre1008" display="block">&lt;a href="Samples.zip"&gt;
</code>




<para id="p1089">
Clicking that link will cause the file named 


<emphasis id="strong1097" effect="bold">
Samples.zip


</emphasis>
 to be downloaded.


</para>





</section>
</section>
<section id="h11007">
<title>



<emphasis id="Miscellaneous" effect="bold">




</emphasis>

Miscellaneous


</title>




<para id="p1090">
This section contains a variety of miscellaneous information.


</para>





<note id="note1011" type="">





<para id="p1091">



<emphasis id="strong1098" effect="bold">
Housekeeping material 


</emphasis>



</para>





<list id="ul1020" list-type="bulleted">



<item id="li1080">
Module name: Authoring OpenStax Documents in Apache OpenOffice Writer 


</item>




<item id="li1081">
File: Wysiwyg0140.odt 


</item>




<item id="li1082">
Published: 04/23/16


</item>




</list>




</note>














<note id="note1012" type="">





<para id="p1092">



<emphasis id="strong1099" effect="bold">
Disclaimers: 


</emphasis>



</para>





<para id="p1093">
Although the OpenStax site makes it possible for you to download a PDF file for this module at no charge, and also makes it possible for you to purchase a pre-printed version of the PDF file, you should be aware that some of the HTML elements in this module may not translate well into PDF. 


</para>





<para id="p1094">
I also want you to know that, I receive no financial compensation from the OpenStax website even if you purchase the PDF version of the module. 


</para>





<para id="p1095">
In the past, unknown individuals have copied my modules from OpenStax, converted them to Kindle books, and placed them for sale on Amazon.com showing me as the author. I neither receive compensation for those sales nor do I know who does receive compensation. If you purchase such a book, please be aware that it is a copy of a module that is freely available on OpenStax and that it was made and published without my prior knowledge.


</para>





</note>














<para id="p1096">
-end-


</para>





</section>
</content>




</document>